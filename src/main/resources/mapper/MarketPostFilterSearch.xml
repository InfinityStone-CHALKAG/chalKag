<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="infinitystone.chalKag.biz.marketPost.IMarketPostDAO">
	<select id="selectAll" resultMap="marketPostMap">
		SELECT DISTINCT 
    'MarketPost' AS POST_category, 
    MARKETPOST.MARKETPOST_id, 
    MARKETPOST.MEMBER_id, 
    MEMBER.MEMBER_nickname,
    MARKETPOST.MARKETPOST_title, 
    MARKETPOST.MARKETPOST_content,
    MARKETPOST.MARKETPOST_date,
    MARKETPOST.MARKETPOST_viewcnt,
    (
        SELECT 
            CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
        FROM 
            RECOMMEND
        WHERE 
            RECOMMEND.POST_id = MARKETPOST.MARKETPOST_id
            AND RECOMMEND.MEMBER_id = #{memberId}
    ) AS myRecommend,
    (
        SELECT 
            COUNT(*)
        FROM 
            RECOMMEND
        WHERE 
            RECOMMEND.POST_id = MARKETPOST.MARKETPOST_id
    ) AS RECOMMEND_cnt,
    (
        SELECT 
            POSTIMG.POSTIMG_name
        FROM 
            POSTIMG
        WHERE 
            POSTIMG.POST_id = MARKETPOST.MARKETPOST_id
        ORDER BY 
            POSTIMG.POSTIMG_id ASC
        LIMIT 1
    ) AS POSTIMG_name
FROM 
    MARKETPOST
INNER JOIN 
    MEMBER ON MARKETPOST.MEMBER_id = MEMBER.MEMBER_id
LEFT JOIN 
    RECOMMEND ON MARKETPOST.MARKETPOST_id = RECOMMEND.POST_id
WHERE
	<if test="marketPostStatus.equals('Sell')">
		MARKETPOST.MARKETPOST_status = 'sell'
	</if>    
	<if test="marketPostStatus.equals('Buy')">
		MARKETPOST.MARKETPOST_status = 'buy'
	</if>  
	<if test="marketPostStatus.equals('Freecycle')">
		MARKETPOST.MARKETPOST_status = 'freecycle'
	</if>  
	
	<if test="searchField.equals('marketPostTitle')">
		AND MARKETPOST.MARKETPOST_title LIKE CONCAT('%',#{searchInput},'%')
	</if>
	
	<if test="searchField.equals('marketPostContent')">
		AND MARKETPOST.MARKETPOST_content LIKE CONCAT('%',#{searchInput},'%')
	</if>
	
	<if test="searchField.equals('memberNickname')">
		AND MEMBER.MEMBER_nickname LIKE CONCAT('%',#{searchInput},'%')
	</if>
	
	<if test="searchField.equals('titleAndContents')">
		AND (MARKETPOST.MARKETPOST_title LIKE CONCAT('%', #{searchInput}, '%')
		OR MARKETPOST.MARKETPOST_content LIKE CONCAT('%', #{searchInput}, '%'))
	</if>
	
	<if test="marketPostCompany != null and marketPostComany !='' ">
		AND MARKETPOST.MARKETPOST_company LIKE CONCAT('%',#{marketPostCompany},'%')
	</if>
	
	<if test="marketPostCategory != null and marketPostCategory != ''">
		AND MARKETPOST.MARKETPOST_category LIKE CONCAT('%',#{marketPostCategory},'%')
	</if>
	
	<if test="minPrice !=0 and maxPrice !=0 and minPrice !=null and maxPrice !=0">
		AND MARKETPOST.MARKETPOST_price BETWEEN #{minPrice} AND #{maxPrice}
	</if>
	
	<if test="fromday != null and fromday != '' ">
			AND DATE(MARKETPOST_date) BETWEEN #{fromday} AND #{today}
	</if>
	
	 ORDER BY MARKETPOST.MARKETPOST_date ${sortOrder == 'asc' ? 'ASC' : 'DESC'}   
	
	</select>

	<resultMap id="marketPostMap" type="infinitystone.chalKag.biz.marketPost.MarketPostDTO">
		   <result column="MARKETPOST_id" property="marketPostId" jdbcType="INTEGER" javaType="String"/>
		   <result column="MEMBER_id" property="memberId" jdbcType="VARCHAR" javaType="String"/>
		   <result column="MEMBER_nickname" property="memberNickname" jdbcType="VARCHAR" javaType="String"/>
		   <result column="MARKETPOST_date" property="marketPostDate" jdbcType="TIMESTAMP" javaType="String"/>
		   <result column="MARKETPOST_title" property="marketPostTitle" jdbcType="VARCHAR" javaType="String"/>
		   <result column="MARKETPOST_content" property="marketPostContent" jdbcType="VARCHAR" javaType="String"/>
		   <result column="MARKETPOST_viewcnt" property="marketPostViewcnt" jdbcType="INTEGER" javaType="String"/>
		   <result column="POSTIMG_name" property="postImgName" jdbcType="VARCHAR" javaType="String"/>
		   <result column="myRecommend" property="myRecommend" jdbcType="INTEGER" javaType="int"/>
		   <result column="RECOMMEND_cnt" property="recommendCnt" jdbcType="INTEGER" javaType="int"/>
		   
	</resultMap>
</mapper>